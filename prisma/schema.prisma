generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model agency {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String          @db.VarChar(255)
  description   String?         @db.VarChar(255)
  owner_id      String          @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  user          user            @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  agency_member agency_member[]
}

model agency_member {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  agency_id  String   @db.Uuid
  user_id    String   @db.Uuid
  joined_at  DateTime @default(now()) @db.Timestamp(6)
  role       String   @db.VarChar(255)
  status     String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  agency     agency   @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model project {
  id                               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                             String    @db.VarChar(255)
  description                      String?   @db.VarChar(255)
  client_id                        String    @db.Uuid
  freelancer_id                    String    @db.Uuid
  start_date                       DateTime? @db.Timestamp(6)
  end_date                         DateTime? @db.Timestamp(6)
  status                           String    @db.VarChar(255)
  created_at                       DateTime  @default(now()) @db.Timestamp(6)
  updated_at                       DateTime  @default(now()) @db.Timestamp(6)
  user_project_client_idTouser     user      @relation("project_client_idTouser", fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_project_freelancer_idTouser user      @relation("project_freelancer_idTouser", fields: [freelancer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model support_ticket {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String   @db.Uuid
  subject     String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  status      String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                  String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                               String           @unique @db.VarChar(255)
  firstName                           String?          @db.VarChar(255)
  lastName                            String?          @db.VarChar(255)
  roq_user_id                         String           @db.VarChar(255)
  tenant_id                           String           @db.VarChar(255)
  created_at                          DateTime         @default(now()) @db.Timestamp(6)
  updated_at                          DateTime         @default(now()) @db.Timestamp(6)
  agency                              agency[]
  agency_member                       agency_member[]
  company                             company[]
  project_project_client_idTouser     project[]        @relation("project_client_idTouser")
  project_project_freelancer_idTouser project[]        @relation("project_freelancer_idTouser")
  support_ticket                      support_ticket[]
}
